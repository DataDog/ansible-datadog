#!/bin/sh

### BEGIN INIT INFO
# Provides: datadog-agent
# Required-Start: $local_fs
# Required-Stop:
# Default-Start:  2 3 5
# Default-Stop:   0 1 2 6
# Short-Description: "Datadog Agent"
### END INIT INFO

. /etc/rc.status

prog=datadog-agent
PIDFILE=/opt/datadog-agent/run/agent.pid
PIDFILE_PROC=/opt/datadog-agent/run/process-agent.pid
PIDFILE_TRACE=/opt/datadog-agent/run/trace-agent.pid
ERR_LOG_FILE=/var/log/datadog/errors.log
ERR_LOG_FILE_PROC=/var/log/datadog/process-errors.log
ERR_LOG_FILE_TRACE=/var/log/datadog/trace-errors.log
DESC="Datadog Agent"

start() {
  echo "Starting $DESC $prog"
  errlog_file_size=$(du -b $ERR_LOG_FILE |cut -f1)
  errlog_file_proc_size=$(du -b $ERR_LOG_FILE_PROC |cut -f1)
  # Rotate log_file if larger than 5MB
  for log_file in $ERR_LOG_FILE $ERR_LOG_FILE_PROC $ERR_LOG_FILE_TRACE; do
    log_file_size=$(du -b $log_file |cut -f1)
    if [ -n "$log_file_size" ] && [ $log_file_size -gt 5242880 ]; then
      mv "$log_file" "$log_file.1"
    fi
  done
  exec su -s /bin/sh -c 'DD_LOG_TO_CONSOLE=false exec "$0" "$@"' dd-agent -- /opt/datadog-agent/bin/agent/agent start -p $PIDFILE 2> $ERR_LOG_FILE &
  exec su -s /bin/sh -c 'DD_LOG_TO_CONSOLE=false exec "$0" "$@"' dd-agent -- /opt/datadog-agent/embedded/bin/process-agent --config=/etc/datadog-agent/datadog.yaml --pid=$PIDFILE_PROC 2> $ERR_LOG_FILE_PROC &
  exec su -s /bin/sh -c 'DD_LOG_TO_CONSOLE=false exec "$0" "$@"' dd-agent -- /opt/datadog-agent/embedded/bin/trace-agent  --config=/etc/datadog-agent/datadog.yaml --pid=$PIDFILE_TRACE 2> $ERR_LOG_FILE_TRACE &
  if [ $? -ne 0 ]; then
    exit "$?"
  else
    exit 0
  fi
}

stop() {
  echo "Stopping $DESC $prog"
  killproc -p $PIDFILE /opt/datadog-agent/bin/agent/agent
  killproc -p $PIDFILE_PROC /opt/datadog-agent/embedded/bin/process-agent
  killproc -p $PIDFILE_TRACE /opt/datadog-agent/embedded/bin/trace-agent
  if [ $? -ne 0 ]; then
    exit "$?"
  else
    exit 0
  fi
}

force_reload() {
  stop
  start

}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  force-reload)
    force_reload
    ;;
  restart)
    stop
    start
    ;;

  *)
    echo "$Usage: $prog {start|stop|force-reload|restart}"
    exit 2
esac
