---
# NOTE: the DMG gets installed as ansible_user, but we then configure it to run
# under datadog_macos_user and remove the user-specific config for ansible_user
- name: Fail if Agent 5
  fail:
    msg: "The Datadog ansible role does not currently support Agent 5 on macOS"
  when: agent_datadog_agent_major_version|int == 5

- name: Check if the macOS user for Agent service exists
  command: id -u "{{ datadog_macos_user }}"
  register: agent_mac_user_check
  changed_when: false
  ignore_errors: true

- name: Fail if the macOS user for Agent service doesn't exist
  fail:
    msg: "The Datadog ansible role wasn't able to find the user : {{ datadog_macos_user }}"
  when: agent_mac_user_check.rc != 0

- name: Include macos agent latest version install task
  include_tasks: pkg-macos/macos_agent_latest.yml
  when: (not agent_datadog_skip_install) and (agent_datadog_agent_macos_version is not defined)

- name: Include macos agent pinned version install task
  include_tasks: pkg-macos/macos_agent_version.yml
  when: (not agent_datadog_skip_install) and (agent_datadog_agent_macos_version is defined)

- name: Display macOS download URL
  debug:
    var: agent_dd_download_url
  when: not agent_datadog_skip_install

- name: Pre-Delete temporary dmg
  file:
    path: /tmp/datadog-agent.dmg
    state: absent
  become: true
  when: not agent_datadog_skip_install

- name: Create temporary datadog install user file
  copy:
    dest: /tmp/datadog-install-user
    content: "{{ datadog_macos_user }}"
    mode: "0554"
  when: (not agent_datadog_skip_install) and (not ansible_check_mode)

- name: Download macOS datadog agent
  get_url:
    url: "{{ agent_dd_download_url }}"
    dest: /tmp/datadog-agent.dmg
    mode: "0750"
  register: agent_download_dmg_result
  when: (not agent_datadog_skip_install) and (not ansible_check_mode)

- name: Detach agent dmg if already mounted
  shell: hdiutil detach "/Volumes/datadog_agent" >/dev/null 2>&1 || true
  when: (not agent_datadog_skip_install) and (not ansible_check_mode)
  changed_when: true

- name: Attach agent dmg
  command: hdiutil attach /tmp/datadog-agent.dmg -mountpoint "/Volumes/datadog_agent"
  when: (not agent_datadog_skip_install) and (not ansible_check_mode) and (agent_download_dmg_result.status_code == 200)
  changed_when: true

- name: Unpack and copy Datadog Agent files
  shell:
    cmd: /usr/sbin/installer -pkg "`find "/Volumes/datadog_agent" -name \*.pkg 2>/dev/null`" -target /
    chdir: /
  become: true
  register: agent_datadog_agent_install
  when: (not agent_datadog_skip_install) and (not ansible_check_mode) and (agent_download_dmg_result.status_code == 200)
  changed_when: true
  notify: restart datadog-agent-macos

- name: Detach mounted dmg
  command: hdiutil detach "/Volumes/datadog_agent"
  when: (not agent_datadog_skip_install) and (not ansible_check_mode) and (agent_download_dmg_result.status_code == 200)
  changed_when: true

- name: Delete temporary dmg
  file:
    path: "{{ agent_download_dmg_result.dest }}"
    state: absent
  become: true
  when: (not agent_datadog_skip_install) and (not ansible_check_mode) and (agent_download_dmg_result.status_code == 200)

- name: Delete temporary datadog install user file
  file:
    path: /tmp/datadog-install-user
    state: absent
  become: true
  when: (not agent_datadog_skip_install) and (not ansible_check_mode)
