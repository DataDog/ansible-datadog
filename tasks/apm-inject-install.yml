---
- name: Remove latest tag and append -1 when version number specified in pinned APM tracer libraries
  set_fact:
    pre_processed_datadog_apm_libraries: "{{ (pre_processed_datadog_apm_libraries | default([], true))
    + [(item | regex_replace('[:]latest', ''))
    + ('-1' if (item.split(':') | length > 1 and item.split(':')[1] != 'latest') else '')] }}"
  loop: "{{ datadog_apm_instrumentation_libraries if datadog_apm_instrumentation_libraries else ['thisistest'] }}"

- name: Include APM host injection Debian install tasks
  include_tasks: pkg-debian/install-apm-inject.yml
  when: not ansible_check_mode and ansible_facts.os_family == "Debian"

- name: Include APM host injection RedHat install tasks
  include_tasks: pkg-redhat/install-apm-inject.yml
  when: not ansible_check_mode and ansible_facts.os_family in ["RedHat", "Rocky", "AlmaLinux"]

- name: Run dd-host-install
  when: not datadog_installer_enabled or not datadog_installer_owns_injector
  block:
    - name: Check if dd-host-install needs to run
      command: dd-host-install --no-config-change --no-agent-restart --dry-run
      register: agent_dd_host_install_cmd
      changed_when: false
      when: not ansible_check_mode and datadog_apm_instrumentation_enabled in ["all", "host"]
      failed_when: agent_dd_host_install_cmd.rc >= 2

    - name: Run APM host injection setup script
      command: dd-host-install --no-config-change --no-agent-restart
      notify: restart datadog-agent
      when: not ansible_check_mode and datadog_apm_instrumentation_enabled in ["all", "host"] and agent_dd_host_install_cmd.rc == 1
      changed_when: true

    - name: Check if dd-container-install needs to run
      command: dd-container-install --dry-run
      register: agent_dd_container_install_cmd
      changed_when: false
      when: not ansible_check_mode and datadog_apm_instrumentation_enabled in ["all", "docker"]
      failed_when: agent_dd_container_install_cmd.rc >= 2

    - name: Create Docker APM injection config file
      template:
        src: apm-inject-docker-config.yaml.j2
        dest: /etc/datadog-agent/inject/docker_config.yaml
        mode: "0640"
        owner: root
        group: "{{ datadog_group }}"
      when: datadog_apm_instrumentation_docker_config

    - name: Run APM host-docker injection (Docker) setup script
      # this command will change /etc/docker/daemon.json and reload docker if changes are made.
      command: dd-container-install
      when: not ansible_check_mode and datadog_apm_instrumentation_enabled in ["all", "docker"] and agent_dd_container_install_cmd.rc == 1
      changed_when: true
