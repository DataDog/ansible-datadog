---
- name: Install apt-transport-https
  apt:
    name: apt-transport-https
    state: present
  when: not ansible_check_mode

- name: Install ubuntu apt-key server
  apt_key:
    id: A2923DFF56EDA6E76E55E492D3A80E30382E94DE
    keyserver: "{{ datadog_apt_backup_keyserver if use_apt_backup_keyserver else datadog_apt_keyserver }}"
    state: present
# keyserver.ubuntu.com is a pool of server, we should retry if one of them is down
  register: result
  until: not result.failed is defined or not result.failed
  retries: "{{ datadog_apt_key_retries }}"
  when: datadog_apt_key_url_new is not defined

- name: Install Datadog apt-key
  apt_key:
    id: A2923DFF56EDA6E76E55E492D3A80E30382E94DE
    url: "{{ datadog_apt_key_url_new }}"
    state: present
  when: datadog_apt_key_url_new is defined

- name: Ensure Datadog non-https repositories are deprecated
  apt_repository:
    repo: "{{ item }}"
    state: "absent"
    update_cache: yes
  with_items:
    - "deb http://apt.datadoghq.com/ stable main"
    - "deb http://apt.datadoghq.com/ stable 6"
  when: not ansible_check_mode

- name: Ensure Datadog repository is up-to-date
  apt_repository:
    repo: "{{ datadog_apt_repo }}"
    state: "{% if datadog_agent5 %}absent{% else %}present{% endif %}"
    update_cache: yes
  when: not ansible_check_mode

- name: (agent5) Ensure Datadog repository is up-to-date
  apt_repository:
    repo: "{{ datadog_agent5_apt_repo }}"
    state: "{% if datadog_agent5 %}present{% else %}absent{% endif %}"
    update_cache: yes
  when: not ansible_check_mode

- name: Ensure pinned version of Datadog agent is installed
  apt:
    name: "datadog-agent={{ datadog_agent_version }}"
    state: present
    force: "{{ datadog_agent_allow_downgrade }}"
    update_cache: yes
    cache_valid_time: "{{ datadog_apt_cache_valid_time }}"
  when: (datadog_agent_version != "") and (not ansible_check_mode)

- name: Ensure Datadog agent is installed
  apt:
    name: datadog-agent
    state: latest
    update_cache: yes
    cache_valid_time: "{{ datadog_apt_cache_valid_time }}"
  when: (datadog_agent_version == "") and (not ansible_check_mode)
