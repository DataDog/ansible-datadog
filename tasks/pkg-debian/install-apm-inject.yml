---
- name: Set APM injection languages and versions for Debian
  set_fact:
    agent_dd_apm_install_pkgs: "{{ (agent_dd_apm_install_pkgs |
      default([], true)) + ['datadog-apm-library-' + (item | regex_replace('[:]', '='))] }}"
  loop: "{{ pre_processed_datadog_apm_libraries | default([], true) }}"
  when: not ansible_check_mode

- name: Unpin tracer libraries for install
  dpkg_selections:
    name: "{{ item }}"
    selection: install
  loop: "{{ agent_dd_apm_install_pkgs | default([], true) | reject('match', '^.*=.*$') | list }}"
  failed_when: false
  when: not ansible_check_mode

- name: Install APM Inject Library
  apt:
    name: 'datadog-apm-inject'
    state: latest # noqa package-latest
    update_cache: true
    cache_valid_time: "{{ datadog_apt_cache_valid_time }}"
  when: not ansible_check_mode and (not datadog_installer_enabled or not datadog_installer_owns_injector)

- name: Install APM tracer libraries
  apt:
    name: "{{ (item | default([], true)) }}"
    state: "{{ 'present' if '=' in item else 'latest' }}" # noqa package-latest
  loop: "{{ agent_dd_apm_install_pkgs | default([], true) }}"
  when: not ansible_check_mode

- name: Show installed tracers
  debug:
    msg: "Installed tracers: {{ agent_dd_apm_install_pkgs | default([], true) }}"

- name: Prevent libraries from being upgraded
  dpkg_selections:
    name: "{{ item.split('=')[0] }}"
    selection: hold
  loop: "{{ agent_dd_apm_install_pkgs | default([], true) | select('match', '^.*=.*$') | list }}"
