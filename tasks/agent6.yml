---
- name: Create Datadog agent config directory
  file:
    dest: /etc/datadog-agent
    state: directory

- name: Create main Datadog agent configuration file
  template:
    src: datadog.yaml.j2
    dest: /etc/datadog-agent/datadog.yaml
    owner: "{{ datadog_user }}"
    group: "{{ datadog_group }}"
  notify: restart datadog-agent

- name: Ensure configuration directories are present for each Datadog check
  file:
    dest: "/etc/datadog-agent/conf.d/{{ item }}.d"
    state: directory
    owner: "{{ datadog_user }}"
    group: "{{ datadog_group }}"
  with_items: '{{ datadog_checks|list }}'

- name: Create a configuration file for each Datadog check
  template:
    src: checks.yaml.j2
    dest: "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml"
    owner: "{{ datadog_user }}"
    group: "{{ datadog_group }}"
  with_items: "{{ datadog_checks|list }}"
  notify: restart datadog-agent

- name: Remove old configuration file for each Datadog check
  file:
    dest: "/etc/datadog-agent/conf.d/{{ item }}.yaml"
    state: absent
  with_items: "{{ datadog_checks|list }}"
  notify: restart datadog-agent

- name: Create trace agent configuration file
  template:
    src: datadog.conf.j2
    dest: /etc/datadog-agent/trace-agent.conf
    owner: "{{ datadog_user }}"
    group: "{{ datadog_group }}"
  notify: restart datadog-agent

- name: Create process agent configuration file
  template:
    src: datadog.conf.j2
    dest: /etc/datadog-agent/process-agent.conf
    owner: "{{ datadog_user }}"
    group: "{{ datadog_group }}"
  notify: restart datadog-agent

- block: # Adding dd-agent to the docker
  - name: Testing if docker group exists
    # using cat to discard error status from grep when docker is not
    # found. Using 'ignor_errors' still print the error message and disabling
    # logs output for this task still logs a message in red saying that logs
    # were discarded.
    shell: "grep -E '^docker:' /etc/group | cat"
    args:
      warn: no
    register: docker_group_exists
  - name: Add the dd-agent user to the docker group
    user:
      name: dd-agent
      groups: docker
      append: yes
    notify: restart datadog-agent
    when: docker_group_exists.stdout|length > 0
  # only try to add the agent to the docker group if the docker check is enabled
  when: datadog_enabled and not ansible_check_mode and "docker" in datadog_checks

- name: Ensure datadog-agent is running
  service:
    name: datadog-agent
    state: started
    enabled: yes
  when: not datadog_skip_running_check and datadog_enabled and not ansible_check_mode

- name: Ensure datadog-agent is not running
  service:
    name: datadog-agent
    state: stopped
    enabled: no
  when: not datadog_skip_running_check and not datadog_enabled
