---
- name: Generate Datadog config locally
  ansible.builtin.template:
    src: datadog.yaml.j2
    dest: "/tmp/datadog.yaml"
    mode: "0600"
  delegate_to: localhost
  become: false
  when: datadog_manage_config

- name: Copy generated config to Windows
  ansible.windows.win_copy:
    src: "/tmp/datadog.yaml"
    dest: "{{ agent_datadog_windows_config_root }}\\datadog.yaml"
  when: datadog_manage_config
  notify: restart datadog-agent-win

- name: Register all check configs present in datadog
  ansible.windows.win_find:
    paths: "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d"
    patterns:
      - "conf.yaml*"
    recurse: true
    depth: 2
    file_type: file
  register: agent_datadog_conf_paths
  when: datadog_manage_config and (datadog_disable_untracked_checks or datadog_disable_default_checks)

- name: Delete checks not present in agent_datadog_tracked_checks
  ansible.windows.win_file:
    path: "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d\\{{ item }}.d\\conf.yaml"
    state: absent
  loop: >-
    {{
      agent_datadog_conf_paths.files | map(attribute='path') | select('match', '.*\\conf\.yaml$') | list
      | map('win_dirname') | map('win_basename') | list | map('regex_replace', '^(.*).d$', '\1') | list
    }}
  when: datadog_manage_config and datadog_disable_untracked_checks and item not in agent_datadog_tracked_checks
  notify: restart datadog-agent-win

- name: Delete default checks
  ansible.windows.win_file:
    path: "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d\\{{ item }}.d\\conf.yaml.default"
    state: absent
  loop: >-
    {{
      agent_datadog_conf_paths.files | map(attribute='path') | select('match', '.*\\conf\.yaml\.default$') | list
      | map('win_dirname') | map('win_basename') | list | map('regex_replace', '^(.*).d$', '\1') | list
    }}
  when: datadog_manage_config and datadog_disable_default_checks and item not in agent_datadog_tracked_checks
  notify: restart datadog-agent-win

- name: Delete example checks
  ansible.windows.win_file:
    path: "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d\\{{ item }}.d\\conf.yaml.example"
    state: absent
  loop: >-
    {{
      agent_datadog_conf_paths.files | map(attribute='path') | select('match', '.*\\conf\.yaml\.example$') | list
      | map('win_dirname') | map('win_basename') | list | map('regex_replace', '^(.*).d$', '\1') | list
    }}
  when: datadog_manage_config and datadog_disable_example_checks and item not in agent_datadog_tracked_checks
  notify: restart datadog-agent-win

- name: Ensure configuration directories are present for each Datadog check
  ansible.windows.win_file:
    path: "{{ agent_datadog_windows_config_root }}\\conf.d\\{{ item }}.d"
    state: directory
  with_items: "{{ agent_datadog_checks | list }}"
  when: datadog_manage_config

- name: Generate check configuration files locally
  ansible.builtin.template:
    src: checks.yaml.j2
    dest: "/tmp/{{ item }}_conf.yaml"
    mode: "0600"
  with_items: "{{ agent_datadog_checks | list }}"
  delegate_to: localhost
  become: false
  when: datadog_manage_config

- name: Copy check configuration files to Windows
  ansible.windows.win_copy:
    src: "/tmp/{{ item }}_conf.yaml"
    dest: "{{ agent_datadog_windows_config_root }}\\conf.d\\{{ item }}.d\\conf.yaml"
  with_items: "{{ agent_datadog_checks | list }}"
  when: datadog_manage_config
  notify: restart datadog-agent-win

- name: Remove old configuration file for each Datadog check
  ansible.windows.win_file:
    path: "{{ agent_datadog_windows_config_root }}\\conf.d\\{{ item }}.yaml"
    state: absent
  with_items: "{{ agent_datadog_checks | list }}"
  when: datadog_manage_config
  notify: restart datadog-agent-win

- name: Create custom check file for each custom check
  ansible.windows.win_copy:
    src: "{{ datadog_custom_checks[item] }}"
    dest: "{{ agent_datadog_windows_config_root }}\\checks.d\\{{ item }}.py"
  with_items: "{{ datadog_custom_checks | list }}"
  notify: restart datadog-agent-win

- name: Ensure datadog-trace-agent and datadog-process-agent are not disabled
  ansible.windows.win_service:
    name: "{{ item }}"
    start_mode: manual
  when: not datadog_skip_running_check and datadog_enabled and not ansible_check_mode
  with_list:
    - datadog-trace-agent
    - datadog-process-agent

- name: Generate system-probe config locally
  ansible.builtin.template:
    src: system-probe.yaml.j2
    dest: "/tmp/system-probe.yaml"
    mode: "0600"
  delegate_to: localhost
  become: false
  when: datadog_manage_config

- name: Copy system-probe config to Windows
  ansible.windows.win_copy:
    src: "/tmp/system-probe.yaml"
    dest: "{{ agent_datadog_windows_config_root }}\\system-probe.yaml"
  when: datadog_manage_config
  notify: restart datadog-agent-win

- name: Check if datadog-agent service exists
  ansible.windows.win_service:
    name: datadogagent
  register: datadog_service_info
  when: not datadog_skip_running_check and datadog_enabled and not ansible_check_mode

- name: Ensure datadog-agent is running
  ansible.windows.win_service:
    name: datadogagent
    state: started
    start_mode: delayed
  when: not datadog_skip_running_check and datadog_enabled and not ansible_check_mode and datadog_service_info.exists
  failed_when: false
  register: datadog_start_result

- name: Wait and retry if service failed to start
  ansible.windows.win_service:
    name: datadogagent
    state: started
  when: not datadog_skip_running_check and datadog_enabled and not ansible_check_mode and datadog_service_info.exists and datadog_start_result.failed
  delay: 10
  retries: 3

- name: Ensure datadog-agent is disabled
  ansible.windows.win_service:
    name: "{{ item }}"
    state: stopped
    start_mode: disabled
  when: not datadog_skip_running_check and not datadog_enabled
  with_list:
    - datadog-trace-agent
    - datadog-process-agent
    - datadogagent

- name: Generate installation information file locally
  ansible.builtin.template:
    src: install_info.j2
    dest: "/tmp/install_info"
    mode: "0600"
  delegate_to: localhost
  become: false

- name: Copy installation information file to Windows
  ansible.windows.win_copy:
    src: "/tmp/install_info"
    dest: "{{ agent_datadog_windows_config_root }}\\install_info"

- name: Clean up temporary config files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  delegate_to: localhost
  become: false
  with_items:
    - "/tmp/datadog.yaml"
    - "/tmp/system-probe.yaml"
    - "/tmp/install_info"
  failed_when: false

- name: Clean up temporary check config files
  ansible.builtin.file:
    path: "/tmp/{{ item }}_conf.yaml"
    state: absent
  delegate_to: localhost
  become: false
  with_items: "{{ agent_datadog_checks | list }}"
  failed_when: false
