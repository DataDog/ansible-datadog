---
- name: (agent5) Create Datadog agent config directory
  file:
    dest: /etc/dd-agent
    state: directory

- name: (agent5) Create main Datadog agent configuration file
  template:
    src: datadog.conf.j2
    dest: /etc/dd-agent/datadog.conf
    owner: "{{ datadog_user }}"
    group: "{{ datadog_group }}"
  notify: restart datadog-agent

- name: (agent5) Check if Datadog agent is in a containerized environment
  stat: 
    path: /.dockerenv
  register: dockerenv

- name: (agent5) Ensure datadog-agent is running
  service:
    name: datadog-agent
    state: started
    enabled: yes
  become_user: "{{ item.user }}"
  when: not datadog_skip_running_check and datadog_enabled and not ansible_check_mode and dockerenv.stat.exists == item.stat
  with_items: "{{ datadog_agent_environment }}"

- name: (agent5) Ensure datadog-agent is not running
  service:
    name: datadog-agent
    state: stopped
    enabled: no
  become_user: "{{ item.user }}"
  when: not datadog_skip_running_check and not datadog_enabled and dockerenv.stat.exists == item.stat
  with_items: "{{ datadog_agent_environment }}"

- name: (agent5) Create a configuration file for each Datadog check
  template:
    src: checks.yaml.j2
    dest: "/etc/dd-agent/conf.d/{{ item }}.yaml"
    owner: "{{ datadog_user }}"
    group: "{{ datadog_group }}"
  with_items: "{{ datadog_checks|list }}"
  notify: restart datadog-agent
